{"version":3,"sources":["Components/css/HookUseEffect.module.css","Components/HookUseEffect.js","App.js","index.js"],"names":["module","exports","DisplayInformation","props","className","styles","Title","device","DeviceName","Description","Icon","DeviceIcon","DisplayGreetings","ResizeWindow","useState","window","innerWidth","windowWidth","setWindowWidth","isToggeleOn","setToggle","deviceInformation","WindowView","MinimumWidth","MaximumWidth","key","aria-hidden","useEffect","getInnerWidthofWindow","windowCurrentWidth","addEventListener","removeEventListener","filter","map","devices","index","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,MAAQ,6BAA6B,OAAS,gC,uLCInG,SAASC,EAAmBC,GAC1B,OACE,6BACE,wBAAIC,UAAS,UAAKC,IAAOC,QAAzB,cACcH,EAAMI,OAAOC,WAD3B,SAGA,2BAAIL,EAAMI,OAAOE,aACjB,uBAAGL,UAAS,UAAKC,IAAOK,OAASP,EAAMI,OAAOI,aAKpD,SAASC,IACP,OACE,6BACE,uDACA,gEACA,wBAAIR,UAAS,UAAKC,IAAOC,QAAzB,mBAKN,IA4FeO,EA5FM,WAAO,IAAD,EACaC,mBAASC,OAAOC,YAD7B,mBAClBC,EADkB,KACLC,EADK,OAEQJ,mBAAS,MAFjB,mBAElBK,EAFkB,KAELC,EAFK,KAGnBC,EAAoB,CACxB,CACEC,WAAY,cACZd,WAAY,SACZC,YAAa,+BACbc,aAAc,EACdC,aAAc,IACdb,WAAY,uBAAGP,UAAU,kBAE3B,CACEkB,WAAY,cACZd,WAAY,SACZC,YAAa,CACX,yBACA,wBAAIgB,IAAI,MACR,wBAAIA,IAAI,MACR,uBAAGA,IAAI,KAAP,qCACA,wBAAIA,IAAI,OAEVF,aAAc,IACdC,aAAc,IACdb,WAAY,uBAAGP,UAAU,sBAE3B,CACEkB,WAAY,cACZd,WAAY,SACZC,YAAa,CACX,oCACA,wBAAIgB,IAAI,MACR,wBAAIA,IAAI,MACR,uBAAGA,IAAI,KAAP,qBACA,wBAAIA,IAAI,OAEVF,aAAc,IACdC,aAAc,IACdb,WAAY,uBAAGP,UAAU,gBAAgBsB,cAAY,UAEvD,CACEJ,WAAY,eACZd,WAAY,UACZC,YAAa,qDACbc,aAAc,IACdC,aAAc,KACdb,WAAY,uBAAGP,UAAU,kBAE3B,CACEkB,WAAY,eACZd,WAAY,UACZC,YAAa,8CACbc,aAAc,KACdC,aAAc,IACdb,WAAY,uBAAGP,UAAU,mBAmB7B,OAhBAuB,qBAAU,WACR,SAASC,IACP,IAAMC,EAAqBd,OAAOC,WAClCE,EAAeW,GASjB,OANET,IADEH,EAAc,MAKlBF,OAAOe,iBAAiB,SAAUF,GAE3B,WACLb,OAAOgB,oBAAoB,SAAUH,MAEtC,CAACX,IAEF,6BACE,4CAAkBA,GAClB,6BACGI,EACEW,QACC,SAACzB,GAAD,OACEA,EAAOiB,aAAeP,GACtBV,EAAOgB,cAAgBN,KAE1BgB,KAAI,SAACC,EAASC,GAAV,OACH,kBAACjC,EAAD,CAAoBK,OAAQ2B,EAAST,IAAKU,OAE9C,6BAAMhB,EAAc,kBAACP,EAAD,MAAuB,SCxGpCwB,MAPf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0aefce3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"HookUseEffect_Icon__qvlec\",\"Title\":\"HookUseEffect_Title__1HJWK\",\"header\":\"HookUseEffect_header__95c5U\"};","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./css/HookUseEffect.module.css\";\r\nimport \"./css/fontawesome.min.css\";\r\nimport \"./css/all.min.css\";\r\n\r\nfunction DisplayInformation(props) {\r\n  return (\r\n    <div>\r\n      <h2 className={`${styles.Title}`}>\r\n        You are in {props.device.DeviceName} View\r\n      </h2>\r\n      <p>{props.device.Description}</p>\r\n      <p className={`${styles.Icon}`}>{props.device.DeviceIcon}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DisplayGreetings() {\r\n  return (\r\n    <div>\r\n      <h3>Welcome to Dekstop View</h3>\r\n      <p>Enjoy the ReactJS Functionalities</p>\r\n      <h3 className={`${styles.Title}`}>Happy Coding!!</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ResizeWindow = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [isToggeleOn, setToggle] = useState(null);\r\n  const deviceInformation = [\r\n    {\r\n      WindowView: \"Mobile View\",\r\n      DeviceName: \"Mobile\",\r\n      Description: \"Contains Extra Small Devices\",\r\n      MinimumWidth: 0,\r\n      MaximumWidth: 600,\r\n      DeviceIcon: <i className=\"fa fa-mobile\"></i>,\r\n    },\r\n    {\r\n      WindowView: \"Mobile View\",\r\n      DeviceName: \"Mobile\",\r\n      Description: [\r\n        \"Contains Small Devices\",\r\n        <br key=\"1\" />,\r\n        <br key=\"2\" />,\r\n        <b key=\"3\">Portrait tablets and large phones</b>,\r\n        <br key=\"4\" />,\r\n      ],\r\n      MinimumWidth: 600,\r\n      MaximumWidth: 768,\r\n      DeviceIcon: <i className=\"fa fa-mobile-alt\"></i>,\r\n    },\r\n    {\r\n      WindowView: \"Tablet View\",\r\n      DeviceName: \"Tablet\",\r\n      Description: [\r\n        \"Tablet Devices Fall in this Group\",\r\n        <br key=\"1\" />,\r\n        <br key=\"2\" />,\r\n        <b key=\"3\">Landscape Tablets</b>,\r\n        <br key=\"4\" />,\r\n      ],\r\n      MinimumWidth: 768,\r\n      MaximumWidth: 992,\r\n      DeviceIcon: <i className=\"fas fa-tablet\" aria-hidden=\"true\"></i>,\r\n    },\r\n    {\r\n      WindowView: \"Desktop View\",\r\n      DeviceName: \"Desktop\",\r\n      Description: \"Tablet ,Laptops/Desktop Devices Fall in this Group\",\r\n      MinimumWidth: 992,\r\n      MaximumWidth: 1200,\r\n      DeviceIcon: <i className=\"fa fa-laptop\"></i>,\r\n    },\r\n    {\r\n      WindowView: \"Desktop View\",\r\n      DeviceName: \"Desktop\",\r\n      Description: \"Contains Extra-Large Laptop/Desktop Devices\",\r\n      MinimumWidth: 1200,\r\n      MaximumWidth: 40000,\r\n      DeviceIcon: <i className=\"fa fa-laptop\"></i>,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    function getInnerWidthofWindow() {\r\n      const windowCurrentWidth = window.innerWidth;\r\n      setWindowWidth(windowCurrentWidth);\r\n    }\r\n    if (windowWidth < 992) {\r\n      setToggle(false);\r\n    } else {\r\n      setToggle(true);\r\n    }\r\n    window.addEventListener(\"resize\", getInnerWidthofWindow);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", getInnerWidthofWindow);\r\n    };\r\n  }, [windowWidth]);\r\n  return (\r\n    <div>\r\n      <h1>Window Width:{windowWidth}</h1>\r\n      <div>\r\n        {deviceInformation\r\n          .filter(\r\n            (device) =>\r\n              device.MaximumWidth > windowWidth &&\r\n              device.MinimumWidth <= windowWidth\r\n          )\r\n          .map((devices, index) => (\r\n            <DisplayInformation device={devices} key={index} />\r\n          ))}\r\n        <div>{isToggeleOn ? <DisplayGreetings /> : null}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResizeWindow;\r\n","import React from \"react\";\r\nimport ResizeWindow from \"./Components/HookUseEffect\";\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <ResizeWindow />\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}
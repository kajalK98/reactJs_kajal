{"version":3,"sources":["Components/Display.js","Components/FormikAndYup.js","App.js","index.js","Components/css/FormikAndYup.module.css"],"names":["Display","props","Card","style","width","className","Body","Title","results","firstName","Subtitle","lastName","Text","password","confirmPassword","email","gender","acceptTandC","department","Link","href","FormikAndYup","state","data","isSubmitting","document","title","Fragment","Navbar","styles","Nav","Container","initialValues","validationSchema","Yup","shape","required","min","oneOf","nullable","onSubmit","result","setState","JSON","stringify","errors","touched","name","type","component","value","id","htmlFor","as","Button","this","React","Component","App","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7343cdd8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nfunction Display(props) {\r\n  return (\r\n    <Card style={{ width: \"22rem\" }} className=\"my-4 border-primary mx-4\">\r\n      <Card.Body>\r\n        <Card.Title>User {props.results.firstName}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          user_name: {props.results.firstName} {props.results.lastName}\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <b>FirstName: {props.results.firstName}</b>\r\n          <br />\r\n          <b>LastName: {props.results.lastName}</b>\r\n          <br />\r\n          <b>Password: {props.results.password}</b>\r\n          <br />\r\n          <b>ConfirmPassword: {props.results.confirmPassword}</b>\r\n          <br />\r\n          <b>Email: {props.results.email}</b>\r\n          <br />\r\n          <b>Gender: {props.results.gender}</b>\r\n          <br />\r\n          <b>AcceptTandC: {props.results.acceptTandC}</b>\r\n          <br />\r\n          <b>Department: {props.results.department}</b>\r\n        </Card.Text>\r\n        <Card.Link href={`mailto:${props.results.email}`}>Send Mail</Card.Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\nimport styles from \"./css/FormikAndYup.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport Display from \"./Display\";\r\nclass FormikAndYup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        acceptTandC: null,\r\n        department: \"\",\r\n      },\r\n      isSubmitting: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Day-13-Formik\";\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar className={`p-4 ${styles.Navbar}`}>\r\n          <Nav className=\"mx-auto\">\r\n            <h1 className=\"text-dark\">Registration Form</h1>\r\n          </Nav>\r\n        </Navbar>\r\n        <Container className=\"py-5\">\r\n          <Formik\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n              email: \"\",\r\n              gender: \"\",\r\n              acceptTandC: false,\r\n              department: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              firstName: Yup.string().required(\"FirstName is required!\"),\r\n              lastName: Yup.string().required(\"LastName is required\"),\r\n              password: Yup.string()\r\n                .min(6, \"Password length must be atleast 6 character long\")\r\n                .required(\"Password is required\"),\r\n              confirmPassword: Yup.string()\r\n                .oneOf([Yup.ref(\"password\")], \"Password must match\")\r\n                .required(\"Password is required\"),\r\n              email: Yup.string()\r\n                .email(\"Email is invalid\")\r\n                .required(\"Email is required\"),\r\n              gender: Yup.string().required(\"You must select gender\"),\r\n              department: Yup.string()\r\n                .nullable()\r\n                .required(\"You must select department\"),\r\n              acceptTandC: Yup.bool().oneOf([true], \"You must accept T&C\"),\r\n            })}\r\n            onSubmit={(result) => {\r\n              this.setState({\r\n                isSubmitting: true,\r\n                data: {\r\n                  firstName: result.firstName,\r\n                  lastName: result.lastName,\r\n                  password: result.password,\r\n                  confirmPassword: result.confirmPassword,\r\n                  email: result.email,\r\n                  gender: result.gender,\r\n                  department: result.department,\r\n                  acceptTandC: JSON.stringify(result.acceptTandC),\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            {({ errors, touched }) => (\r\n              <Form>\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-group col\">\r\n                    <label>First Name</label>\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.firstName && touched.firstName\r\n                          ? \"is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"firstName\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label>Last Name</label>\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.lastName && touched.lastName\r\n                          ? \"is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"lastName\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label>Password</label>\r\n                    <Field\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.password && touched.password\r\n                          ? \"is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label>Confirm password</label>\r\n                    <Field\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.confirmPassword && touched.confirmPassword\r\n                          ? \"is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"confirmPassword\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label>Email</label>\r\n                    <Field\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.email && touched.email ? \"is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <label className=\"mr-5\">Gender</label>\r\n                    <Field\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"male\"\r\n                      id=\"male\"\r\n                      className={\r\n                        \"mx-2 form-check-input \" +\r\n                        (errors.gender && touched.gender ? \" is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <label className=\"form-check-label mx-4\" htmlFor=\"male\">\r\n                      Male\r\n                    </label>\r\n                    <Field\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"female\"\r\n                      id=\"female\"\r\n                      className={\r\n                        \"mx-2 form-check-input \" +\r\n                        (errors.gender && touched.gender ? \" is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <label className=\"form-check-label mx-4\" htmlFor=\"female\">\r\n                      Female\r\n                    </label>\r\n                    <Field\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"other\"\r\n                      id=\"other\"\r\n                      className={\r\n                        \"mx-2 form-check-input \" +\r\n                        (errors.gender && touched.gender ? \" is-invalid\" : \"\")\r\n                      }\r\n                    />\r\n                    <label className=\"form-check-label mx-4\" htmlFor=\"other\">\r\n                      Other\r\n                    </label>\r\n                    <ErrorMessage\r\n                      name=\"gender\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"department\">Department</label>\r\n                    <br />\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"department\"\r\n                      className={\r\n                        \"form-control \" +\r\n                        (errors.department && touched.department\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      <option value=\"\">--Select--</option>\r\n                      <option value=\".Net\">.Net</option>\r\n                      <option value=\"React\">React</option>\r\n                      <option value=\"Angular\">Angular</option>\r\n                      <option value=\"BDM\">\r\n                        Business Development & Management\r\n                      </option>\r\n                      <option value=\"HRM\">Human Resource Management</option>\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"department\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                    <Field\r\n                      type=\"checkbox\"\r\n                      name=\"acceptTandC\"\r\n                      className={\r\n                        \"form-check-input \" +\r\n                        (errors.acceptTandC && touched.acceptTandC\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                    />\r\n                    <label htmlFor=\"acceptTandC\" className=\"form-check-label\">\r\n                      Accept Terms & Conditions\r\n                    </label>\r\n                    <ErrorMessage\r\n                      name=\"acceptTandC\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n                  <div className={`form-group ${styles.Button} mx-auto py-5`}>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    <input type=\"reset\" value=\"Reset\" />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <div>\r\n            {this.state.isSubmitting ? (\r\n              <>\r\n                <hr />\r\n                <h1 className=\"text-primary text-center\">Registered User</h1>\r\n                <Display results={this.state.data} />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default FormikAndYup;\r\n","import React from \"react\";\r\nimport FormikAndYup from \"./Components/FormikAndYup\";\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <FormikAndYup />\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"FormikAndYup_Navbar__3BIrP\",\"Button\":\"FormikAndYup_Button__219D9\"};"],"sourceRoot":""}